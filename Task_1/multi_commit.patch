From ed72384f86324641d6a1a735fe591a332ac4043c Mon Sep 17 00:00:00 2001
From: Vaishnavi <vaishnavigaikwad3939@gmail.com>
Date: Tue, 9 Jul 2024 16:05:32 +0530
Subject: [PATCH 1/2] Changes in getDataPoint, getRatio and main to print
 correct ratio

---
 client3.py | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..821458b 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,16 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) / 2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if price_b == 0:
+        return
+    return price_a / price_b
 
 
 # Main
@@ -52,8 +54,10 @@ if __name__ == "__main__":
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
         """ ----------- Update to get the ratio --------------- """
+        prices = {}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
-- 
2.39.3 (Apple Git-146)


From b5236cf8b8b0d1e57f8a1359a5d5ff9c2a222fc4 Mon Sep 17 00:00:00 2001
From: Vaishnavi <vaishnavigaikwad3939@gmail.com>
Date: Tue, 9 Jul 2024 18:15:42 +0530
Subject: [PATCH 2/2] Added unit tests

---
 __pycache__/client3.cpython-39.pyc | Bin 0 -> 1142 bytes
 client_test.py                     |  14 +++++++++++---
 2 files changed, 11 insertions(+), 3 deletions(-)
 create mode 100644 __pycache__/client3.cpython-39.pyc

diff --git a/__pycache__/client3.cpython-39.pyc b/__pycache__/client3.cpython-39.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..1d4dc61f4d560fc8fc9eccfb3daba86a7ee43667
GIT binary patch
literal 1142
zcmYjQ&2Jk;6rb5IuM<1CX+E$jp#iBXMz|ZqfhsCch+8BiqO?^jF#@e7JI~H0>s@DN
zT&QtQ=E{+~bL5}kz@IT!4ybodoOnA<qR!}j&fA&ye($Ylx7P@+e>%Sne{T}<cWu1A
z&_^C2>A#RkB56VRN>Wap?QvgvJdi#QWgx>}36EqX8z>tP%lOPwe?k-1AY9M|9grV?
z=IcO~E$~m<%MA#Y?*LuWOL9ps>9SKxek&(@6K-Mb9={C{++NTh0=~t!`3~QOUD$-J
zhXmf0P1u5M*n!<)utOG<lJg0A*PsELa=lBCx4LBEU7ZaieNKAqH&_QboV|Zy%w#`F
ziYgPuNu|yHgS`iP$@vu2>o0Tp`7amwzm$*+>1Ktf1xN=-`Vq1@;?X4+)YO{SCDO<D
z=!NI(;Kugn-rV0MGQ2}Bf;p|Nc`ytxn`rhKJ5rULX23*IFmnQ|1dt%vD^W~AGgGk<
zl%Ryc2quLQlPWI_v!OOsc4ix<nxx0MwBbbM8LVuf&)#^LUys^wSX9FFLK~h>D+8)_
z+a`XHuHu^*yHZtM+8;!%qxg>}FEl8fycD@UDaETi8C2PH45iV@lS+vZus-|t=(_{<
zGFN6Qin@%E660j(PWz{man{#ALEqp5{ZEpt$noP(?@wOa)(Ff13psLy;A`5ApdZr?
z?iN*T^ksFT*Q?fRa=>q)GN+Q_V6~+89HF1nI|RY>XCJU{z%axruUIu?uEJC>QOYa*
zn5nv<hpxz;#~W86*UGUwSg{rc+8A?vR^Rs#S~@~TFwcOh4R@NRW099>I=lC@Mpv@C
znhC=`M11$}>W>-L?xcGLwcadtw_%+1zxw*X`h&+$dR-oz>Z;_C!c40%-<YbR$dB(U
zz;V=uM=P6$PhUKK_PwQt4xyVAN->5swLy;UwISXy0!vdHV&kRejq6()cuO^b(ni>#
zu`o7JAf%1lTxcG-9JPwEFgGQt{`FPe8aEkkz)JHLK=q)g6-p1sIKu^ev5hYM9<rF?
V_5<AUTHK7i4rP9Tz7Eok_doV6B1QlJ

literal 0
HcmV?d00001

diff --git a/client_test.py b/client_test.py
index af2bf26..d2ad83d 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,6 @@
 import unittest
 from client3 import getDataPoint
+from client3 import getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,18 +9,25 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_ask']['price'] + quote['top_bid']['price']) / 2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
-      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 120.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
 
-
-  """ ------------ Add more unit tests ------------ """
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_ask']['price'] + quote['top_bid']['price']) / 2))
 
 
+  """ ------------ Add more unit tests ------------ """
+  def test_getRatio_calculateRatio(self):
+    self.assertEqual(getRatio(120.2, 120.68), 120.2 / 120.68)
+    self.assertEqual(getRatio(121.2, 0), None) 
 
 if __name__ == '__main__':
     unittest.main()
-- 
2.39.3 (Apple Git-146)

